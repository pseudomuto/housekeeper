version: "3"

vars:
  BIN_DIR: "bin"
  LINT_VERSION: 2.1.6
  GORELEASER_VERSION: 2.5.0

tasks:
  update:
    desc: Updates all dependencies
    aliases: [up]
    silent: true
    cmds:
      - go mod tidy

  run:
    desc: Run the housekeeper cli (local build)
    silent: true
    cmd: go run ./cmd/housekeeper/main.go {{.CLI_ARGS}}

  lint:
    desc: Run golangci-lint on the codebase
    deps: [install:golangci-lint]
    silent: true
    cmd: "{{.BIN_DIR}}/golangci-lint run {{.CLI_ARGS}}"

  test:
    desc: Run the test suite
    silent: true
    cmd: go test ./... -cover

  test:short:
    desc: Run the test suite (only fast tests)
    silent: true
    cmd: go test ./... -cover -short

  build:
    desc: Build a local snapshot with goreleaser (including container images)
    deps: [install:goreleaser]
    silent: true
    cmds:
      - "{{.BIN_DIR}}/goreleaser release --snapshot --clean --skip=publish"

  tag:
    desc: Create and push a new signed tag for release
    prompt: This will create, sign, and push tag {{.TAG}}. Continue?
    requires:
      vars: [TAG]
    preconditions:
      - sh: git diff --quiet
        msg: "Working directory must be clean"
      - sh: git diff --cached --quiet
        msg: "No staged changes allowed"
      - sh: '[[ "{{.TAG}}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]'
        msg: "TAG must be in format vX.Y.Z (e.g., v1.0.0)"
    cmds:
      - git tag -s {{.TAG}} -m "Release {{.TAG}}"
      - git push origin {{.TAG}}
      - echo "Signed tag {{.TAG}} created and pushed. GitHub Actions will now build and release."

  tag:patch:
    desc: Create and push a patch version tag (v0.0.X)
    cmds:
      - task: tag
        vars:
          TAG:
            sh: git describe --tags --abbrev=0 2>/dev/null | awk -F. '{print $1"."$2"."$3+1}' || echo "v0.0.1"

  tag:minor:
    desc: Create and push a minor version tag (v0.X.0)
    cmds:
      - task: tag
        vars:
          TAG:
            sh: git describe --tags --abbrev=0 2>/dev/null | awk -F. '{print $1"."$2+1".0"}' || echo "v0.1.0"

  tag:major:
    desc: Create and push a major version tag (vX.0.0)
    cmds:
      - task: tag
        vars:
          TAG:
            sh: git describe --tags --abbrev=0 2>/dev/null | awk -F. '{print $1+1".0.0"}' | sed 's/^v/v/' || echo "v1.0.0"

  install:golangci-lint:
    internal: true
    silent: true
    status:
      - test -f {{.BIN_DIR}}/golangci-lint
      - "{{.BIN_DIR}}/golangci-lint --version | grep 'version {{.LINT_VERSION}}' >/dev/null"
    vars:
      URL: https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
    cmd: curl -sSfL {{.URL}} | sh -s -- -b {{.BIN_DIR}} v{{.LINT_VERSION}}

  install:goreleaser:
    internal: true
    silent: true
    status:
      - test -f {{.BIN_DIR}}/goreleaser
    vars:
      URL: https://github.com/goreleaser/goreleaser/releases/download/nightly/goreleaser_Darwin_arm64.tar.gz
      TMPDIR:
        sh: mktemp -d
    cmds:
      - defer: rm -rf {{.TMPDIR}}
      - curl -sSfL {{.URL}} | tar -xz -C {{.TMPDIR}}
      - mv {{.TMPDIR}}/goreleaser {{.BIN_DIR}}/goreleaser
      - chmod +x {{.BIN_DIR}}/goreleaser
